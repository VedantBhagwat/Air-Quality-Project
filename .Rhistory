str(X2020_Hourly_NO_for_UCC)
X2018_Hourly_NO_for_UCC <- X2018_Hourly_NO_for_UCC[,c(T,(nrow(X2018_Hourly_NO_for_UCC)*0.25 > missing_data_NO_2018$value))]
# fill NA's with mean values
for(i in 2:ncol(X2018_Hourly_NO_for_UCC)){
X2018_Hourly_NO_for_UCC[is.na(X2018_Hourly_NO_for_UCC[,i]), i] <- format(round(mean(X2018_Hourly_NO_for_UCC[,i], na.rm = TRUE), 2), nsmall = 2)
X2018_Hourly_NO_for_UCC[,i] <- as.double(X2018_Hourly_NO_for_UCC[,i])
}
str(X2018_Hourly_NO_for_UCC)
View(X2018_Hourly_NO_for_UCC)
# fill NA's with mean values
for(i in 2:ncol(X2019_Hourly_NO_for_UCC)){
X2019_Hourly_NO_for_UCC[is.na(X2019_Hourly_NO_for_UCC[,i]), i] <- format(round(mean(X2019_Hourly_NO_for_UCC[,i], na.rm = TRUE), 2), nsmall = 2)
X2019_Hourly_NO_for_UCC[,i] <- as.double(X2019_Hourly_NO_for_UCC[,i])
}
str(X2019_Hourly_NO_for_UCC)
View(X2020_Hourly_NO_for_UCC)
## Select columns with the missing data less than 25% ##
X2020_Hourly_NO_for_UCC <- X2020_Hourly_NO_for_UCC[,c(T,(nrow(X2020_Hourly_NO_for_UCC)*0.25 > missing_data_NO_2019$value))]
View(X2020_Hourly_NO_for_UCC)
View(X2018_Hourly_NO_for_UCC)
View(X2019_Hourly_NO_for_UCC)
X2019_Hourly_NO_for_UCC <- X2019_Hourly_NO_for_UCC[,c(T,(nrow(X2019_Hourly_NO_for_UCC)*0.25 > missing_data_NO_2019$value))]
View(X2019_Hourly_NO_for_UCC)
# fill NA's with mean values
for(i in 2:ncol(X2019_Hourly_NO_for_UCC)){
X2019_Hourly_NO_for_UCC[is.na(X2019_Hourly_NO_for_UCC[,i]), i] <- format(round(mean(X2019_Hourly_NO_for_UCC[,i], na.rm = TRUE), 2), nsmall = 2)
X2019_Hourly_NO_for_UCC[,i] <- as.double(X2019_Hourly_NO_for_UCC[,i])
}
str(X2019_Hourly_NO_for_UCC)
View(X2020_Hourly_NO_for_UCC)
sum(is.na.data.frame(X2018_Hourly_NO_for_UCC)) # 0
sum(is.na.data.frame(X2019_Hourly_NO_for_UCC)) # 0
sum(is.na.data.frame(X2020_Hourly_NO_for_UCC)) # 0
# fill NA's with mean values
for(i in 2:ncol(X2020_Hourly_NO_for_UCC)){
# X2020_Hourly_NO_for_UCC[is.na(X2020_Hourly_NO_for_UCC[,i]), i] <- mean(X2020_Hourly_NO_for_UCC[,i], na.rm = TRUE)
X2020_Hourly_NO_for_UCC[is.na(X2020_Hourly_NO_for_UCC[,i]), i] <- format(round(mean(X2020_Hourly_NO_for_UCC[,i], na.rm = TRUE), 2), nsmall = 2)
X2020_Hourly_NO_for_UCC[,i] <- as.double(X2020_Hourly_NO_for_UCC[,i])
}
str(X2020_Hourly_NO_for_UCC)
sum(is.na.data.frame(X2018_Hourly_NO_for_UCC)) # 0
sum(is.na.data.frame(X2019_Hourly_NO_for_UCC)) # 0
sum(is.na.data.frame(X2020_Hourly_NO_for_UCC)) # 0
View(X2018_Hourly_NO_for_UCC)
# fill NA's with mean values
for(i in 2:ncol(X2020_Hourly_NO_for_UCC)){
X2020_Hourly_NO_for_UCC[is.na(X2020_Hourly_NO_for_UCC[,i]), i] <- format(round(mean(X2020_Hourly_NO_for_UCC[,i], na.rm = TRUE), 2), nsmall = 2)
X2020_Hourly_NO_for_UCC[,i] <- as.double(X2020_Hourly_NO_for_UCC[,i])
}
str(X2020_Hourly_NO_for_UCC)
sum(is.na.data.frame(X2018_Hourly_NO_for_UCC)) # 0
sum(is.na.data.frame(X2019_Hourly_NO_for_UCC)) # 0
sum(is.na.data.frame(X2020_Hourly_NO_for_UCC)) # 0
str(X2018_Hourly_NO2_for_UCC)
typeof(X2018_Hourly_NO2_for_UCC)
# Convert data into data frame
X2018_Hourly_NO2_for_UCC <- data.frame(X2018_Hourly_NO2_for_UCC)
# Convert string date to Date object
colnames(X2018_Hourly_NO2_for_UCC)[1] <- "Date"
X2018_Hourly_NO2_for_UCC$Date <- strptime(X2018_Hourly_NO2_for_UCC$Date, format="%d/%m/%Y %H:%M")
# Convert character numbers into double
for(i in 2:ncol(X2018_Hourly_NO2_for_UCC)){
X2018_Hourly_NO2_for_UCC[,i] <- as.double(X2018_Hourly_NO2_for_UCC[,i])
}
# Check NA values
missing_data_NO2_2018 <- data.frame("Station"=colnames(X2018_Hourly_NO2_for_UCC[,-1]), "value"=colSums(is.na(X2018_Hourly_NO2_for_UCC[,-1])))
md_NO2_2018<-ggplot(data=missing_data_NO2_2018, aes(x=Station, y=value)) +
geom_bar(stat="identity", fill="steelblue")
md_NO2_2018 +
# geom_text(aes(label=value), vjust=1.6, color="white", size=3.5)+
geom_text(aes(label=value), vjust=-0.3, size=3.5)+
theme_minimal() +
theme(axis.text.x=element_text(angle = 45, hjust = 1))+
ggtitle("Missing data of NO2 in 2018")
str(X2018_Hourly_NO2_for_UCC)
str(X2019_Hourly_NO2_for_UCC)
typeof(X2019_Hourly_NO2_for_UCC)
# Convert data into data frame
X2019_Hourly_NO2_for_UCC <- data.frame(X2019_Hourly_NO2_for_UCC)
# Convert string date to Date object
colnames(X2019_Hourly_NO2_for_UCC)[1] <- "Date"
View(X2019_Hourly_NO2_for_UCC)
X2019_Hourly_NO2_for_UCC$Date <- strptime(X2019_Hourly_NO2_for_UCC$Date, format="%d/%m/%Y %H:%M")
# Convert character numbers into double
for(i in 2:ncol(X2019_Hourly_NO2_for_UCC)){
X2019_Hourly_NO2_for_UCC[,i] <- as.double(X2019_Hourly_NO2_for_UCC[,i])
}
# Check NA values
missing_data_NO2_2019 <- data.frame("Station"=colnames(X2019_Hourly_NO2_for_UCC[,-1]), "value"=colSums(is.na(X2019_Hourly_NO2_for_UCC[,-1])))
md_NO2_2019<-ggplot(data=missing_data_NO2_2019, aes(x=Station, y=value)) +
geom_bar(stat="identity", fill="steelblue")
md_NO2_2019 +
# geom_text(aes(label=value), vjust=1.6, color="white", size=3.5)+
geom_text(aes(label=value), vjust=-0.3, size=3.5)+
theme_minimal() +
theme(axis.text.x=element_text(angle = 45, hjust = 1))+
ggtitle("Missing data of NO2 in 2019")
str(X2019_Hourly_NO2_for_UCC)
str(X2020_Hourly_NO2_for_UCC)
typeof(X2020_Hourly_NO2_for_UCC)
View(X2020_Hourly_NO2_for_UCC)
# Convert data into data frame
X2020_Hourly_NO2_for_UCC <- data.frame(X2020_Hourly_NO2_for_UCC)
# Convert string date to Date object
colnames(X2020_Hourly_NO2_for_UCC)[1] <- "Date"
X2020_Hourly_NO2_for_UCC$Date <- strptime(X2020_Hourly_NO2_for_UCC$Date, format="%d/%m/%Y %H:%M")
# Convert character numbers into double
for(i in 2:ncol(X2020_Hourly_NO2_for_UCC)){
X2020_Hourly_NO2_for_UCC[,i] <- as.double(X2020_Hourly_NO2_for_UCC[,i])
}
# Check NA values
missing_data_NO2_2020 <- data.frame("Station"=colnames(X2020_Hourly_NO2_for_UCC[,-1]), "value"=colSums(is.na(X2020_Hourly_NO2_for_UCC[,-1])))
md_NO2_2020<-ggplot(data=missing_data_NO2_2020, aes(x=Station, y=value)) +
geom_bar(stat="identity", fill="steelblue")
md_NO2_2020 +
# geom_text(aes(label=value), vjust=1.6, color="white", size=3.5)+
geom_text(aes(label=value), vjust=-0.3, size=3.5)+
theme_minimal() +
theme(axis.text.x=element_text(angle = 45, hjust = 1))+
ggtitle("Missing data of NO2 in 2020")
str(X2020_Hourly_NO2_for_UCC)
View(X2018_Hourly_NO2_for_UCC)
X2018_Hourly_NO2_for_UCC <- X2018_Hourly_NO2_for_UCC[,c(T,(nrow(X2018_Hourly_NO2_for_UCC)*0.25 > missing_data_NO2_2018$value))]
# fill NA's with mean values
for(i in 2:ncol(X2018_Hourly_NO2_for_UCC)){
X2018_Hourly_NO2_for_UCC[is.na(X2018_Hourly_NO2_for_UCC[,i]), i] <- format(round(mean(X2018_Hourly_NO2_for_UCC[,i], na.rm = TRUE), 2), nsmall = 2)
X2018_Hourly_NO2_for_UCC[,i] <- as.double(X2018_Hourly_NO2_for_UCC[,i])
}
str(X2018_Hourly_NO2_for_UCC)
X2019_Hourly_NO2_for_UCC <- X2019_Hourly_NO2_for_UCC[,c(T,(nrow(X2019_Hourly_NO2_for_UCC)*0.25 > missing_data_NO2_2019$value))]
View(X2019_Hourly_NO2_for_UCC)
# fill NA's with mean values
for(i in 2:ncol(X2019_Hourly_NO2_for_UCC)){
X2019_Hourly_NO2_for_UCC[is.na(X2019_Hourly_NO2_for_UCC[,i]), i] <- format(round(mean(X2019_Hourly_NO2_for_UCC[,i], na.rm = TRUE), 2), nsmall = 2)
X2019_Hourly_NO2_for_UCC[,i] <- as.double(X2019_Hourly_NO2_for_UCC[,i])
}
str(X2019_Hourly_NO2_for_UCC)
## Select columns with the missing data less than 25% ##
X2020_Hourly_NO2_for_UCC <- X2020_Hourly_NO2_for_UCC[,c(T,(nrow(X2020_Hourly_NO2_for_UCC)*0.25 > missing_data_NO2_2019$value))]
View(X2020_Hourly_NO2_for_UCC)
# fill NA's with mean values
for(i in 2:ncol(X2020_Hourly_NO2_for_UCC)){
X2020_Hourly_NO2_for_UCC[is.na(X2020_Hourly_NO2_for_UCC[,i]), i] <- format(round(mean(X2020_Hourly_NO2_for_UCC[,i], na.rm = TRUE), 2), nsmall = 2)
X2020_Hourly_NO2_for_UCC[,i] <- as.double(X2020_Hourly_NO2_for_UCC[,i])
}
str(X2020_Hourly_NO2_for_UCC)
sum(is.na.data.frame(X2018_Hourly_NO2_for_UCC)) # 0
sum(is.na.data.frame(X2019_Hourly_NO2_for_UCC)) # 0
sum(is.na.data.frame(X2020_Hourly_NO2_for_UCC)) # 0
View(X2020_Hourly_NO2_for_UCC[[1]][[4287]])
which(is.na(X2020_Hourly_NO2_for_UCC), arr.ind=TRUE)
# which(is.na(X2020_Hourly_NO2_for_UCC), arr.ind=TRUE)
X2020_Hourly_NO2_for_UCC %>%
rowid_to_column() %>%
filter(is.na(x))
# which(is.na(X2020_Hourly_NO2_for_UCC), arr.ind=TRUE)
library(tidyverse)
X2020_Hourly_NO2_for_UCC %>%
rowid_to_column() %>%
filter(is.na(x))
X2020_Hourly_NO2_for_UCC %>%
rowid_to_column() %>%
filter(is.na())
X2020_Hourly_NO2_for_UCC %>%
rowid_to_column() %>%
filter(is.na(X2020_Hourly_NO2_for_UCC))
str(X2018_Hourly_O3_for_UCC)
typeof(X2018_Hourly_O3_for_UCC)
# Convert data into data frame
X2018_Hourly_O3_for_UCC <- data.frame(X2018_Hourly_O3_for_UCC)
# Convert string date to Date object
colnames(X2018_Hourly_O3_for_UCC)[1] <- "Date"
View(X2018_Hourly_O3_for_UCC)
X2018_Hourly_O3_for_UCC$Date <- strptime(X2018_Hourly_O3_for_UCC$Date, format="%d/%m/%Y %H:%M")
str(X2018_Hourly_O3_for_UCC)
View(X2018_Hourly_O3_for_UCC)
# Convert character numbers into double
for(i in 2:ncol(X2018_Hourly_O3_for_UCC)){
X2018_Hourly_O3_for_UCC[,i] <- as.double(X2018_Hourly_O3_for_UCC[,i])
# X2018_Hourly_O3_for_UCC[is.na(X2018_Hourly_O3_for_UCC[,i]), i] <- mean(X2018_Hourly_O3_for_UCC[,i], na.rm = TRUE)
}
# Check NA values
missing_data_O3_2018 <- data.frame("Station"=colnames(X2018_Hourly_O3_for_UCC[,-1]), "value"=colSums(is.na(X2018_Hourly_O3_for_UCC[,-1])))
md_O3_2018<-ggplot(data=missing_data_O3_2018, aes(x=Station, y=value)) +
geom_bar(stat="identity", fill="steelblue")
md_O3_2018 +
# geom_text(aes(label=value), vjust=1.6, color="white", size=3.5)+
geom_text(aes(label=value), vjust=-0.3, size=3.5)+
theme_minimal() +
theme(axis.text.x=element_text(angle = 45, hjust = 1))+
ggtitle("Missing data of O3 in 2018")
str(X2018_Hourly_O3_for_UCC)
str(X2019_Hourly_O3_for_UCC)
typeof(X2019_Hourly_O3_for_UCC)
# Convert data into data frame
X2019_Hourly_O3_for_UCC <- data.frame(X2019_Hourly_O3_for_UCC)
# Convert string date to Date object
colnames(X2019_Hourly_O3_for_UCC)[1] <- "Date"
X2019_Hourly_O3_for_UCC$Date <- strptime(X2019_Hourly_O3_for_UCC$Date, format="%d/%m/%Y %H:%M")
# Convert character numbers into double
for(i in 2:ncol(X2019_Hourly_O3_for_UCC)){
X2019_Hourly_O3_for_UCC[,i] <- as.double(X2019_Hourly_O3_for_UCC[,i])
# X2019_Hourly_O3_for_UCC[is.na(X2019_Hourly_O3_for_UCC[,i]), i] <- mean(X2019_Hourly_O3_for_UCC[,i], na.rm = TRUE)
}
# Check NA values
missing_data_O3_2019 <- data.frame("Station"=colnames(X2019_Hourly_O3_for_UCC[,-1]), "value"=colSums(is.na(X2019_Hourly_O3_for_UCC[,-1])))
md_O3_2019<-ggplot(data=missing_data_O3_2019, aes(x=Station, y=value)) +
geom_bar(stat="identity", fill="steelblue")
md_O3_2019 +
# geom_text(aes(label=value), vjust=1.6, color="white", size=3.5)+
geom_text(aes(label=value), vjust=-0.3, size=3.5)+
theme_minimal() +
theme(axis.text.x=element_text(angle = 45, hjust = 1))+
ggtitle("Missing data of O3 in 2019")
str(X2019_Hourly_O3_for_UCC)
str(X2020_Hourly_O3_for_UCC)
typeof(X2020_Hourly_O3_for_UCC)
# Convert data into data frame
X2020_Hourly_O3_for_UCC <- data.frame(X2020_Hourly_O3_for_UCC)
# Convert string date to Date object
colnames(X2020_Hourly_O3_for_UCC)[1] <- "Date"
X2020_Hourly_O3_for_UCC$Date <- strptime(X2020_Hourly_O3_for_UCC$Date, format="%d/%m/%Y %H:%M")
# Convert character numbers into double
for(i in 2:ncol(X2020_Hourly_O3_for_UCC)){
X2020_Hourly_O3_for_UCC[,i] <- as.double(X2020_Hourly_O3_for_UCC[,i])
# X2020_Hourly_O3_for_UCC[is.na(X2020_Hourly_O3_for_UCC[,i]), i] <- mean(X2020_Hourly_O3_for_UCC[,i], na.rm = TRUE)
}
# Check NA values
missing_data_O3_2020 <- data.frame("Station"=colnames(X2020_Hourly_O3_for_UCC[,-1]), "value"=colSums(is.na(X2020_Hourly_O3_for_UCC[,-1])))
md_O3_2020<-ggplot(data=missing_data_O3_2020, aes(x=Station, y=value)) +
geom_bar(stat="identity", fill="steelblue")
md_O3_2020 +
# geom_text(aes(label=value), vjust=1.6, color="white", size=3.5)+
geom_text(aes(label=value), vjust=-0.3, size=3.5)+
theme_minimal() +
theme(axis.text.x=element_text(angle = 45, hjust = 1))+
ggtitle("Missing data of O3 in 2020")
str(X2020_Hourly_O3_for_UCC)
View(X2018_Hourly_O3_for_UCC)
X2018_Hourly_O3_for_UCC <- X2018_Hourly_O3_for_UCC[,c(T,(nrow(X2018_Hourly_O3_for_UCC)*0.25 > missing_data_O3_2018$value))]
View(X2018_Hourly_O3_for_UCC)
# fill NA's with mean values
for(i in 2:ncol(X2018_Hourly_O3_for_UCC)){
X2018_Hourly_O3_for_UCC[is.na(X2018_Hourly_O3_for_UCC[,i]), i] <- format(round(mean(X2018_Hourly_O3_for_UCC[,i], na.rm = TRUE), 2), nsmall = 2)
X2018_Hourly_O3_for_UCC[,i] <- as.double(X2018_Hourly_O3_for_UCC[,i])
}
str(X2018_Hourly_O3_for_UCC)
X2019_Hourly_O3_for_UCC <- X2019_Hourly_O3_for_UCC[,c(T,(nrow(X2019_Hourly_O3_for_UCC)*0.25 > missing_data_O3_2019$value))]
View(X2019_Hourly_O3_for_UCC)
# fill NA's with mean values
for(i in 2:ncol(X2019_Hourly_O3_for_UCC)){
X2019_Hourly_O3_for_UCC[is.na(X2019_Hourly_O3_for_UCC[,i]), i] <- format(round(mean(X2019_Hourly_O3_for_UCC[,i], na.rm = TRUE), 2), nsmall = 2)
X2019_Hourly_O3_for_UCC[,i] <- as.double(X2019_Hourly_O3_for_UCC[,i])
}
str(X2019_Hourly_O3_for_UCC)
View(X2020_Hourly_O3_for_UCC)
## Select columns with the missing data less than 25% ##
X2020_Hourly_O3_for_UCC <- X2020_Hourly_O3_for_UCC[,c(T,(nrow(X2020_Hourly_O3_for_UCC)*0.25 > missing_data_O3_2019$value))]
# fill NA's with mean values
for(i in 2:ncol(X2020_Hourly_O3_for_UCC)){
X2020_Hourly_O3_for_UCC[is.na(X2020_Hourly_O3_for_UCC[,i]), i] <- format(round(mean(X2020_Hourly_O3_for_UCC[,i], na.rm = TRUE), 2), nsmall = 2)
X2020_Hourly_O3_for_UCC[,i] <- as.double(X2020_Hourly_O3_for_UCC[,i])
}
str(X2020_Hourly_O3_for_UCC)
sum(is.na.data.frame(X2018_Hourly_O3_for_UCC)) # 99355, 0
sum(is.na.data.frame(X2019_Hourly_O3_for_UCC)) # 25894, 0
sum(is.na.data.frame(X2020_Hourly_O3_for_UCC)) # 4287, 0
X2020_Hourly_O3_for_UCC <- read_excel("E:/CIT/Project/AQ data/AAMP/2020 updated Ozone for UCC.xls",
skip = 2)
# View(X2020_Hourly_O3_for_UCC)
X2020_Hourly_O3_for_UCC_stats <- X2020_Hourly_O3_for_UCC[c(4290:4297),]
X2020_Hourly_O3_for_UCC <- X2020_Hourly_O3_for_UCC[-c(1,2,(4290:4297)),]
str(X2020_Hourly_O3_for_UCC)
typeof(X2020_Hourly_O3_for_UCC)
# Convert data into data frame
X2020_Hourly_O3_for_UCC <- data.frame(X2020_Hourly_O3_for_UCC)
View(X2020_Hourly_O3_for_UCC)
# Convert data into data frame
X2018_Hourly_O3_for_UCC <- data.frame(X2018_Hourly_O3_for_UCC)
# Convert string date to Date object
colnames(X2018_Hourly_O3_for_UCC)[1] <- "Date"
View(X2018_Hourly_O3_for_UCC)
# Convert string date to Date object
colnames(X2020_Hourly_O3_for_UCC)[1] <- "Date"
View(X2020_Hourly_O3_for_UCC)
strptime(X2020_Hourly_O3_for_UCC$Date, format="%d/%m/%Y %H:%M")
X2020_Hourly_O3_for_UCC$Date <- strptime(X2020_Hourly_O3_for_UCC$Date, format="%d/%m/%Y %H:%M")
# Convert character numbers into double
for(i in 2:ncol(X2020_Hourly_O3_for_UCC)){
X2020_Hourly_O3_for_UCC[,i] <- as.double(X2020_Hourly_O3_for_UCC[,i])
}
# Check NA values
missing_data_O3_2020 <- data.frame("Station"=colnames(X2020_Hourly_O3_for_UCC[,-1]), "value"=colSums(is.na(X2020_Hourly_O3_for_UCC[,-1])))
md_O3_2020<-ggplot(data=missing_data_O3_2020, aes(x=Station, y=value)) +
geom_bar(stat="identity", fill="steelblue")
md_O3_2020 +
# geom_text(aes(label=value), vjust=1.6, color="white", size=3.5)+
geom_text(aes(label=value), vjust=-0.3, size=3.5)+
theme_minimal() +
theme(axis.text.x=element_text(angle = 45, hjust = 1))+
ggtitle("Missing data of O3 in 2020")
str(X2020_Hourly_O3_for_UCC)
## Select columns with the missing data less than 25% ##
X2020_Hourly_O3_for_UCC <- X2020_Hourly_O3_for_UCC[,c(T,(nrow(X2020_Hourly_O3_for_UCC)*0.25 > missing_data_O3_2019$value))]
# fill NA's with mean values
for(i in 2:ncol(X2020_Hourly_O3_for_UCC)){
X2020_Hourly_O3_for_UCC[is.na(X2020_Hourly_O3_for_UCC[,i]), i] <- format(round(mean(X2020_Hourly_O3_for_UCC[,i], na.rm = TRUE), 2), nsmall = 2)
X2020_Hourly_O3_for_UCC[,i] <- as.double(X2020_Hourly_O3_for_UCC[,i])
}
str(X2020_Hourly_O3_for_UCC)
sum(is.na.data.frame(X2018_Hourly_O3_for_UCC)) # 99355, 0
sum(is.na.data.frame(X2019_Hourly_O3_for_UCC)) # 25894, 0
sum(is.na.data.frame(X2020_Hourly_O3_for_UCC)) # 4287, 0
str(X2018_Hourly_PM10_for_UCC)
typeof(X2018_Hourly_PM10_for_UCC)
# Convert data into data frame
X2018_Hourly_PM10_for_UCC <- data.frame(X2018_Hourly_PM10_for_UCC)
# Convert string date to Date object
colnames(X2018_Hourly_PM10_for_UCC)[1] <- "Date"
X2018_Hourly_PM10_for_UCC$Date <- strptime(X2018_Hourly_PM10_for_UCC$Date, format="%d/%m/%Y %H:%M")
View(X2018_Hourly_PM10_for_UCC)
# Convert character numbers into double
for(i in 2:ncol(X2018_Hourly_PM10_for_UCC)){
X2018_Hourly_PM10_for_UCC[,i] <- as.double(X2018_Hourly_PM10_for_UCC[,i])
# X2018_Hourly_PM10_for_UCC[is.na(X2018_Hourly_PM10_for_UCC[,i]), i] <- mean(X2018_Hourly_PM10_for_UCC[,i], na.rm = TRUE)
}
# Check NA values
missing_data_PM10_2018 <- data.frame("Station"=colnames(X2018_Hourly_PM10_for_UCC[,-1]), "value"=colSums(is.na(X2018_Hourly_PM10_for_UCC[,-1])))
md_PM10_2018<-ggplot(data=missing_data_PM10_2018, aes(x=Station, y=value)) +
geom_bar(stat="identity", fill="steelblue")
md_PM10_2018 +
# geom_text(aes(label=value), vjust=1.6, color="white", size=3.5)+
geom_text(aes(label=value), vjust=-0.3, size=3.5)+
theme_minimal() +
theme(axis.text.x=element_text(angle = 45, hjust = 1))+
ggtitle("Missing data of PM10 in 2018")
str(X2018_Hourly_PM10_for_UCC)
str(X2019_Hourly_PM10_for_UCC)
typeof(X2019_Hourly_PM10_for_UCC)
# Convert data into data frame
X2019_Hourly_PM10_for_UCC <- data.frame(X2019_Hourly_PM10_for_UCC)
# Convert string date to Date object
colnames(X2019_Hourly_PM10_for_UCC)[1] <- "Date"
View(X2019_Hourly_PM10_for_UCC)
X2019_Hourly_PM10_for_UCC$Date <- strptime(X2019_Hourly_PM10_for_UCC$Date, format="%d/%m/%Y %H:%M")
# Convert character numbers into double
for(i in 2:ncol(X2019_Hourly_PM10_for_UCC)){
X2019_Hourly_PM10_for_UCC[,i] <- as.double(X2019_Hourly_PM10_for_UCC[,i])
# X2019_Hourly_PM10_for_UCC[is.na(X2019_Hourly_PM10_for_UCC[,i]), i] <- mean(X2019_Hourly_PM10_for_UCC[,i], na.rm = TRUE)
}
# Check NA values
missing_data_PM10_2019 <- data.frame("Station"=colnames(X2019_Hourly_PM10_for_UCC[,-1]), "value"=colSums(is.na(X2019_Hourly_PM10_for_UCC[,-1])))
md_PM10_2019<-ggplot(data=missing_data_PM10_2019, aes(x=Station, y=value)) +
geom_bar(stat="identity", fill="steelblue")
md_PM10_2019 +
# geom_text(aes(label=value), vjust=1.6, color="white", size=3.5)+
geom_text(aes(label=value), vjust=-0.3, size=3.5)+
theme_minimal() +
theme(axis.text.x=element_text(angle = 45, hjust = 1))+
ggtitle("Missing data of PM10 in 2019")
str(X2019_Hourly_PM10_for_UCC)
str(X2020_Hourly_PM10_for_UCC)
typeof(X2020_Hourly_PM10_for_UCC)
# Convert data into data frame
X2020_Hourly_PM10_for_UCC <- data.frame(X2020_Hourly_PM10_for_UCC)
# Convert string date to Date object
colnames(X2020_Hourly_PM10_for_UCC)[1] <- "Date"
X2020_Hourly_PM10_for_UCC$Date <- strptime(X2020_Hourly_PM10_for_UCC$Date, format="%d/%m/%Y %H:%M")
# Convert character numbers into double
for(i in 2:ncol(X2020_Hourly_PM10_for_UCC)){
X2020_Hourly_PM10_for_UCC[,i] <- as.double(X2020_Hourly_PM10_for_UCC[,i])
# X2020_Hourly_PM10_for_UCC[is.na(X2020_Hourly_PM10_for_UCC[,i]), i] <- mean(X2020_Hourly_PM10_for_UCC[,i], na.rm = TRUE)
}
# Check NA values
missing_data_PM10_2020 <- data.frame("Station"=colnames(X2020_Hourly_PM10_for_UCC[,-1]), "value"=colSums(is.na(X2020_Hourly_PM10_for_UCC[,-1])))
md_PM10_2020<-ggplot(data=missing_data_PM10_2020, aes(x=Station, y=value)) +
geom_bar(stat="identity", fill="steelblue")
md_PM10_2020 +
# geom_text(aes(label=value), vjust=1.6, color="white", size=3.5)+
geom_text(aes(label=value), vjust=-0.3, size=3.5)+
theme_minimal() +
theme(axis.text.x=element_text(angle = 45, hjust = 1))+
ggtitle("Missing data of PM10 in 2020")
str(X2020_Hourly_PM10_for_UCC)
View(X2018_Hourly_PM10_for_UCC)
X2018_Hourly_PM10_for_UCC <- X2018_Hourly_PM10_for_UCC[,c(T,(nrow(X2018_Hourly_PM10_for_UCC)*0.25 > missing_data_PM10_2018$value))]
View(X2018_Hourly_PM10_for_UCC)
# fill NA's with mean values
for(i in 2:ncol(X2018_Hourly_PM10_for_UCC)){
# X2018_Hourly_PM10_for_UCC[is.na(X2018_Hourly_PM10_for_UCC[,i]), i] <- mean(X2018_Hourly_PM10_for_UCC[,i], na.rm = TRUE)
X2018_Hourly_PM10_for_UCC[is.na(X2018_Hourly_PM10_for_UCC[,i]), i] <- format(round(mean(X2018_Hourly_PM10_for_UCC[,i], na.rm = TRUE), 2), nsmall = 2)
X2018_Hourly_PM10_for_UCC[,i] <- as.double(X2018_Hourly_PM10_for_UCC[,i])
}
str(X2018_Hourly_PM10_for_UCC)
View(X2018_Hourly_PM10_for_UCC)
View(X2019_Hourly_PM10_for_UCC)
X2019_Hourly_PM10_for_UCC <- X2019_Hourly_PM10_for_UCC[,c(T,(nrow(X2019_Hourly_PM10_for_UCC)*0.25 > missing_data_PM10_2019$value))]
# fill NA's with mean values
for(i in 2:ncol(X2019_Hourly_PM10_for_UCC)){
X2019_Hourly_PM10_for_UCC[is.na(X2019_Hourly_PM10_for_UCC[,i]), i] <- format(round(mean(X2019_Hourly_PM10_for_UCC[,i], na.rm = TRUE), 2), nsmall = 2)
X2019_Hourly_PM10_for_UCC[,i] <- as.double(X2019_Hourly_PM10_for_UCC[,i])
}
str(X2019_Hourly_PM10_for_UCC)
View(X2020_Hourly_PM10_for_UCC)
## Select columns with the missing data less than 25% ##
X2020_Hourly_PM10_for_UCC <- X2020_Hourly_PM10_for_UCC[,c(T,(nrow(X2020_Hourly_PM10_for_UCC)*0.25 > missing_data_PM10_2019$value))]
View(X2020_Hourly_PM10_for_UCC)
# fill NA's with mean values
for(i in 2:ncol(X2020_Hourly_PM10_for_UCC)){
X2020_Hourly_PM10_for_UCC[is.na(X2020_Hourly_PM10_for_UCC[,i]), i] <- format(round(mean(X2020_Hourly_PM10_for_UCC[,i], na.rm = TRUE), 2), nsmall = 2)
X2020_Hourly_PM10_for_UCC[,i] <- as.double(X2020_Hourly_PM10_for_UCC[,i])
}
str(X2020_Hourly_PM10_for_UCC)
sum(is.na.data.frame(X2018_Hourly_PM10_for_UCC)) # 4212, 0
sum(is.na.data.frame(X2019_Hourly_PM10_for_UCC)) # 96190, 0
sum(is.na.data.frame(X2020_Hourly_PM10_for_UCC)) # 7583, 0
str(X2018_Hourly_PM2_5_for_UCC)
typeof(X2018_Hourly_PM2_5_for_UCC)
# Convert data into data frame
X2018_Hourly_PM2_5_for_UCC <- data.frame(X2018_Hourly_PM2_5_for_UCC)
# Convert string date to Date object
colnames(X2018_Hourly_PM2_5_for_UCC)[1] <- "Date"
X2018_Hourly_PM2_5_for_UCC$Date <- strptime(X2018_Hourly_PM2_5_for_UCC$Date, format="%d/%m/%Y %H:%M")
View(X2018_Hourly_PM2_5_for_UCC)
str(X2018_Hourly_PM2_5_for_UCC)
# Convert character numbers into double
for(i in 2:ncol(X2018_Hourly_PM2_5_for_UCC)){
X2018_Hourly_PM2_5_for_UCC[,i] <- as.double(X2018_Hourly_PM2_5_for_UCC[,i])
}
# Check NA values
missing_data_PM2_5_2018 <- data.frame("Station"=colnames(X2018_Hourly_PM2_5_for_UCC[,-1]), "value"=colSums(is.na(X2018_Hourly_PM2_5_for_UCC[,-1])))
md_PM2_5_2018<-ggplot(data=missing_data_PM2_5_2018, aes(x=Station, y=value)) +
geom_bar(stat="identity", fill="steelblue")
md_PM2_5_2018 +
# geom_text(aes(label=value), vjust=1.6, color="white", size=3.5)+
geom_text(aes(label=value), vjust=-0.3, size=3.5)+
theme_minimal() +
theme(axis.text.x=element_text(angle = 45, hjust = 1))+
ggtitle("Missing data of PM2.5 in 2018")
str(X2018_Hourly_PM2_5_for_UCC)
str(X2019_Hourly_PM2_5_for_UCC)
typeof(X2019_Hourly_PM2_5_for_UCC)
# Convert data into data frame
X2019_Hourly_PM2_5_for_UCC <- data.frame(X2019_Hourly_PM2_5_for_UCC)
# Convert string date to Date object
colnames(X2019_Hourly_PM2_5_for_UCC)[1] <- "Date"
X2019_Hourly_PM2_5_for_UCC$Date <- strptime(X2019_Hourly_PM2_5_for_UCC$Date, format="%d/%m/%Y %H:%M")
# Convert character numbers into double
for(i in 2:ncol(X2019_Hourly_PM2_5_for_UCC)){
X2019_Hourly_PM2_5_for_UCC[,i] <- as.double(X2019_Hourly_PM2_5_for_UCC[,i])
}
# Check NA values
missing_data_PM2_5_2019 <- data.frame("Station"=colnames(X2019_Hourly_PM2_5_for_UCC[,-1]), "value"=colSums(is.na(X2019_Hourly_PM2_5_for_UCC[,-1])))
md_PM2_5_2019<-ggplot(data=missing_data_PM2_5_2019, aes(x=Station, y=value)) +
geom_bar(stat="identity", fill="steelblue")
md_PM2_5_2019 +
# geom_text(aes(label=value), vjust=1.6, color="white", size=3.5)+
geom_text(aes(label=value), vjust=-0.3, size=3.5)+
theme_minimal() +
theme(axis.text.x=element_text(angle = 45, hjust = 1))+
ggtitle("Missing data of PM2.5 in 2019")
str(X2019_Hourly_PM2_5_for_UCC)
str(X2020_Hourly_PM2_5_for_UCC)
typeof(X2020_Hourly_PM2_5_for_UCC)
# Convert data into data frame
X2020_Hourly_PM2_5_for_UCC <- data.frame(X2020_Hourly_PM2_5_for_UCC)
# Convert string date to Date object
colnames(X2020_Hourly_PM2_5_for_UCC)[1] <- "Date"
X2020_Hourly_PM2_5_for_UCC$Date <- strptime(X2020_Hourly_PM2_5_for_UCC$Date, format="%d/%m/%Y %H:%M")
# Convert character numbers into double
for(i in 2:ncol(X2020_Hourly_PM2_5_for_UCC)){
X2020_Hourly_PM2_5_for_UCC[,i] <- as.double(X2020_Hourly_PM2_5_for_UCC[,i])
}
# Check NA values
missing_data_PM2_5_2020 <- data.frame("Station"=colnames(X2020_Hourly_PM2_5_for_UCC[,-1]), "value"=colSums(is.na(X2020_Hourly_PM2_5_for_UCC[,-1])))
md_PM2_5_2020<-ggplot(data=missing_data_PM2_5_2020, aes(x=Station, y=value)) +
geom_bar(stat="identity", fill="steelblue")
md_PM2_5_2020 +
# geom_text(aes(label=value), vjust=1.6, color="white", size=3.5)+
geom_text(aes(label=value), vjust=-0.3, size=3.5)+
theme_minimal() +
theme(axis.text.x=element_text(angle = 45, hjust = 1))+
ggtitle("Missing data of PM2.5 in 2020")
str(X2020_Hourly_PM2_5_for_UCC)
X2018_Hourly_PM2_5_for_UCC <- X2018_Hourly_PM2_5_for_UCC[,c(T,(nrow(X2018_Hourly_PM2_5_for_UCC)*0.25 > missing_data_PM2_5_2018$value))]
# fill NA's with mean values
for(i in 2:ncol(X2018_Hourly_PM2_5_for_UCC)){
X2018_Hourly_PM2_5_for_UCC[is.na(X2018_Hourly_PM2_5_for_UCC[,i]), i] <- format(round(mean(X2018_Hourly_PM2_5_for_UCC[,i], na.rm = TRUE), 2), nsmall = 2)
X2018_Hourly_PM2_5_for_UCC[,i] <- as.double(X2018_Hourly_PM2_5_for_UCC[,i])
}
str(X2018_Hourly_PM2_5_for_UCC)
View(X2019_Hourly_PM2_5_for_UCC)
X2019_Hourly_PM2_5_for_UCC <- X2019_Hourly_PM2_5_for_UCC[,c(T,(nrow(X2019_Hourly_PM2_5_for_UCC)*0.25 > missing_data_PM2_5_2019$value))]
# fill NA's with mean values
for(i in 2:ncol(X2019_Hourly_PM2_5_for_UCC)){
X2019_Hourly_PM2_5_for_UCC[is.na(X2019_Hourly_PM2_5_for_UCC[,i]), i] <- format(round(mean(X2019_Hourly_PM2_5_for_UCC[,i], na.rm = TRUE), 2), nsmall = 2)
X2019_Hourly_PM2_5_for_UCC[,i] <- as.double(X2019_Hourly_PM2_5_for_UCC[,i])
}
str(X2019_Hourly_PM2_5_for_UCC)
## Select columns with the missing data less than 25% ##
X2020_Hourly_PM2_5_for_UCC <- X2020_Hourly_PM2_5_for_UCC[,c(T,(nrow(X2020_Hourly_PM2_5_for_UCC)*0.25 > missing_data_PM2_5_2019$value))]
View(X2020_Hourly_PM2_5_for_UCC)
# fill NA's with mean values
for(i in 2:ncol(X2020_Hourly_PM2_5_for_UCC)){
X2020_Hourly_PM2_5_for_UCC[is.na(X2020_Hourly_PM2_5_for_UCC[,i]), i] <- format(round(mean(X2020_Hourly_PM2_5_for_UCC[,i], na.rm = TRUE), 2), nsmall = 2)
X2020_Hourly_PM2_5_for_UCC[,i] <- as.double(X2020_Hourly_PM2_5_for_UCC[,i])
}
str(X2020_Hourly_PM2_5_for_UCC)
sum(is.na.data.frame(X2018_Hourly_PM2_5_for_UCC)) # 192645, 0
sum(is.na.data.frame(X2019_Hourly_PM2_5_for_UCC)) # 92303, 0
sum(is.na.data.frame(X2020_Hourly_PM2_5_for_UCC)) # 6589, 0
str(X2020_Hourly_PM2_5_for_UCC)
