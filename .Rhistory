X2019_Hourly_NO2_for_UCC_stats <- X2019_Hourly_NO2_for_UCC[c(8764:8771),]
X2019_Hourly_NO2_for_UCC <- X2019_Hourly_NO2_for_UCC[-c(1,2,(8764:8771)),]
X2020_Hourly_NO2_for_UCC <- read_excel("E:/CIT/Project/AQ data/AAMP/2020 updated  NO2 for UCC.xls",
skip = 2)
# View(X2020_Hourly_NO2_for_UCC)
X2020_Hourly_NO2_for_UCC_stats <- X2020_Hourly_NO2_for_UCC[c(4290:4297),]
X2020_Hourly_NO2_for_UCC <- X2020_Hourly_NO2_for_UCC[-c(1,2,(4290:4297)),]
# PM 2.5
X2018_Hourly_PM2_5_for_UCC <- read_excel("E:/CIT/Project/AQ data/AAMP/2018 Hourly PM2.5 for UCC.xls",
skip = 2)
# View(X2018_Hourly_PM2_5_for_UCC)
X2018_Hourly_PM2_5_for_UCC_stats <- X2018_Hourly_PM2_5_for_UCC[c(8764:8771),]
X2018_Hourly_PM2_5_for_UCC <- X2018_Hourly_PM2_5_for_UCC[-c(1,2,(8764:8771)),]
X2019_Hourly_PM2_5_for_UCC <- read_excel("E:/CIT/Project/AQ data/AAMP/2019 Hourly PM2.5 for UCC.xls",
skip = 2)
# View(X2019_Hourly_PM2_5_for_UCC)
X2019_Hourly_PM2_5_for_UCC_stats <- X2019_Hourly_PM2_5_for_UCC[c(8764:8771),]
X2019_Hourly_PM2_5_for_UCC <- X2019_Hourly_PM2_5_for_UCC[-c(1,2,(8764:8771)),]
X2020_Hourly_PM2_5_for_UCC <- read_excel("E:/CIT/Project/AQ data/AAMP/2020 updated PM25 for UCC.xls",
skip = 2)
# View(X2020_Hourly_PM2_5_for_UCC)
X2020_Hourly_PM2_5_for_UCC_stats <- X2020_Hourly_PM2_5_for_UCC[c(4290:4297),]
X2020_Hourly_PM2_5_for_UCC <- X2020_Hourly_PM2_5_for_UCC[-c(1,2,(4290:4297)),]
# PM 10
X2018_Hourly_PM10_for_UCC <- read_excel("E:/CIT/Project/AQ data/AAMP/2018 Hourly PM10 for UCC.xls",
skip = 2)
# View(X2018_Hourly_PM10_for_UCC)
X2018_Hourly_PM10_for_UCC_stats <- X2018_Hourly_PM10_for_UCC[c(8764:8771),]
X2018_Hourly_PM10_for_UCC <- X2018_Hourly_PM10_for_UCC[-c(1,2,(8764:8771)),]
X2019_Hourly_PM10_for_UCC <- read_excel("E:/CIT/Project/AQ data/AAMP/2019 Hourly PM10 for UCC.xls",
skip = 2)
# View(X2019_Hourly_PM10_for_UCC)
X2019_Hourly_PM10_for_UCC_stats <- X2019_Hourly_PM10_for_UCC[c(8764:8771),]
X2019_Hourly_PM10_for_UCC <- X2019_Hourly_PM10_for_UCC[-c(1,2,(8764:8771)),]
X2020_Hourly_PM10_for_UCC <- read_excel("E:/CIT/Project/AQ data/AAMP/2020 updated PM10 for UCC.xls",
skip = 2)
# View(X2020_Hourly_PM10_for_UCC)
X2020_Hourly_PM10_for_UCC_stats <- X2020_Hourly_PM10_for_UCC[c(4290:4297),]
X2020_Hourly_PM10_for_UCC <- X2020_Hourly_PM10_for_UCC[-c(1,2,(4290:4297)),]
# Ozone
X2018_Hourly_O3_for_UCC <- read_excel("E:/CIT/Project/AQ data/AAMP/2018 Hourly O3 for UCC.xls",
skip = 2)
# View(X2018_Hourly_O3_for_UCC)
X2018_Hourly_O3_for_UCC_stats <- X2018_Hourly_O3_for_UCC[c(8764:8771),]
X2018_Hourly_O3_for_UCC <- X2018_Hourly_O3_for_UCC[-c(1,2,(8764:8771)),]
X2019_Hourly_O3_for_UCC <- read_excel("E:/CIT/Project/AQ data/AAMP/2019 Hourly O3 for UCC.xls",
skip = 2)
# View(X2019_Hourly_O3_for_UCC)
X2019_Hourly_O3_for_UCC_stats <- X2019_Hourly_O3_for_UCC[c(8764:8771),]
X2019_Hourly_O3_for_UCC <- X2019_Hourly_O3_for_UCC[-c(1,2,(8764:8771)),]
X2020_Hourly_O3_for_UCC <- read_excel("E:/CIT/Project/AQ data/AAMP/2020 updated Ozone for UCC.xls",
skip = 2)
# View(X2020_Hourly_O3_for_UCC)
X2020_Hourly_O3_for_UCC_stats <- X2020_Hourly_O3_for_UCC[c(4290:4297),]
X2020_Hourly_O3_for_UCC <- X2020_Hourly_O3_for_UCC[-c(1,2,(4290:4297)),]
?ts
plot(X2020_Hourly_O3_for_UCC$Castlebar)
str(X2020_Hourly_O3_for_UCC)
summary(X2020_Hourly_O3_for_UCC)
# Convert string date to Date object
X2020_Hourly_O3_for_UCC$`Date & Time` <- as.Date(X2020_Hourly_O3_for_UCC$`Date & Time`)
# X2020_Hourly_O3_for_UCC$Castlebar <- as.double(X2020_Hourly_O3_for_UCC$Castlebar)
# Check NA values
# X2020_Hourly_O3_for_UCC$Castlebar <- na.omit(X2020_Hourly_O3_for_UCC$Castlebar)
is.na(X2020_Hourly_O3_for_UCC$Castlebar)
sum(is.na(X2020_Hourly_O3_for_UCC$Castlebar))
typeof(X2020_Hourly_O3_for_UCC)
# Convert data into data frame
X2020_Hourly_O3_for_UCC <- data.frame(X2020_Hourly_O3_for_UCC)
# Convert character numbers into double and replace NA values with mean
for(i in 2:ncol(X2020_Hourly_O3_for_UCC)){
X2020_Hourly_O3_for_UCC[,i] <- as.double(X2020_Hourly_O3_for_UCC[,i])
X2020_Hourly_O3_for_UCC[is.na(X2020_Hourly_O3_for_UCC[,i]), i] <- mean(X2020_Hourly_O3_for_UCC[,i], na.rm = TRUE)
}
str(X2020_Hourly_O3_for_UCC)
# Replace NA values with mean
# install.packages("imputeTS")
# library(imputeTS)
# X2020_Hourly_O3_for_UCC$Castlebar <- na_mean(X2020_Hourly_O3_for_UCC$Castlebar)
# install.packages("xts")
# library(xts)
# train_xts <- xts(x = X2020_Hourly_O3_for_UCC, order.by = X2020_Hourly_O3_for_UCC$`Date & Time`)
# # View(train_xts)
plot.ts(X2020_Hourly_O3_for_UCC$Bray)
plot.ts(X2020_Hourly_O3_for_UCC$Castlebar)
timeseries <- ts(X2020_Hourly_O3_for_UCC$Bray, frequency=12, start=c(2020,1))
# View(timeseries)
plot.ts(timeseries)
#######################################
start.date <- as.POSIXct(strptime('2020-01-01 00:00:00', format="%Y-%m-%d %H:%M:%S"))  # the min from your df
# dat <- data.frame(
#   timestamp=as.POSIXct(seq.POSIXt(from=start.date, by="hour", length.out=4287)),
#   Bray=X2020_Hourly_O3_for_UCC$Bray)
# library(plotly)
# plot_ly(dat, x=timestamp, y=dat$Bray, text="Bray", type='scatter')
library(zoo)
new_dat <- zoo(X2020_Hourly_O3_for_UCC$Bray, as.POSIXct(seq.POSIXt(from=start.date, by="hour", length.out=length(X2020_Hourly_O3_for_UCC$Bray))))
# plot.ts(new_dat)
autoplot(new_dat)+xlab("days")+ylab("Values in ppm")
library(Hmisc)
X2020_Hourly_NO_for_UCC
View(X2020_Hourly_NO_for_UCC)
########### 2018 NO
str(X2018_Hourly_NO_for_UCC)
typeof(X2018_Hourly_NO_for_UCC)
# Convert data into data frame
X2018_Hourly_NO_for_UCC <- data.frame(X2018_Hourly_NO_for_UCC)
# Convert string date to Date object
colnames(X2018_Hourly_NO_for_UCC)[1] <- "Date"
X2018_Hourly_NO_for_UCC$Date <- as.Date(X2018_Hourly_NO_for_UCC$Date)
# Convert character numbers into double and replace NA values with mean
for(i in 2:ncol(X2018_Hourly_NO_for_UCC)){
X2018_Hourly_NO_for_UCC[,i] <- as.double(X2018_Hourly_NO_for_UCC[,i])
# X2018_Hourly_NO_for_UCC[is.na(X2018_Hourly_NO_for_UCC[,i]), i] <- mean(X2018_Hourly_NO_for_UCC[,i], na.rm = TRUE)
}
# X2018_Hourly_NO_for_UCC$Castlebar <- as.double(X2018_Hourly_NO_for_UCC$Castlebar)
# Check NA values
missing_data_NO_2018 <- data.frame("Station"=colnames(X2018_Hourly_NO_for_UCC[,-1]), "value"=colSums(is.na(X2018_Hourly_NO_for_UCC[,-1])))
md_NO_2018<-ggplot(data=missing_data_NO_2018, aes(x=Station, y=value)) +
geom_bar(stat="identity", fill="steelblue")
md_NO_2018 +
# geom_text(aes(label=value), vjust=1.6, color="white", size=3.5)+
geom_text(aes(label=value), vjust=-0.3, size=3.5)+
theme_minimal() +
theme(axis.text.x=element_text(angle = 45, hjust = 1))+
ggtitle("Missing data of NO in 2018")
str(X2018_Hourly_NO_for_UCC)
########### 2019 NO
str(X2019_Hourly_NO_for_UCC)
typeof(X2019_Hourly_NO_for_UCC)
# Convert data into data frame
X2019_Hourly_NO_for_UCC <- data.frame(X2019_Hourly_NO_for_UCC)
# Convert string date to Date object
colnames(X2019_Hourly_NO_for_UCC)[1] <- "Date"
X2019_Hourly_NO_for_UCC$Date <- as.Date(X2019_Hourly_NO_for_UCC$Date)
# Convert character numbers into double and replace NA values with mean
for(i in 2:ncol(X2019_Hourly_NO_for_UCC)){
X2019_Hourly_NO_for_UCC[,i] <- as.double(X2019_Hourly_NO_for_UCC[,i])
# X2019_Hourly_NO_for_UCC[is.na(X2019_Hourly_NO_for_UCC[,i]), i] <- mean(X2019_Hourly_NO_for_UCC[,i], na.rm = TRUE)
}
# X2019_Hourly_NO_for_UCC$Castlebar <- as.double(X2019_Hourly_NO_for_UCC$Castlebar)
# Check NA values
missing_data_NO_2019 <- data.frame("Station"=colnames(X2019_Hourly_NO_for_UCC[,-1]), "value"=colSums(is.na(X2019_Hourly_NO_for_UCC[,-1])))
md_NO_2019<-ggplot(data=missing_data_NO_2019, aes(x=Station, y=value)) +
geom_bar(stat="identity", fill="steelblue")
md_NO_2019 +
# geom_text(aes(label=value), vjust=1.6, color="white", size=3.5)+
geom_text(aes(label=value), vjust=-0.3, size=3.5)+
theme_minimal() +
theme(axis.text.x=element_text(angle = 45, hjust = 1))+
ggtitle("Missing data of NO in 2019")
str(X2019_Hourly_NO_for_UCC)
########### 2020 NO
str(X2020_Hourly_NO_for_UCC)
typeof(X2020_Hourly_NO_for_UCC)
# Convert data into data frame
X2020_Hourly_NO_for_UCC <- data.frame(X2020_Hourly_NO_for_UCC)
# Convert string date to Date object
colnames(X2020_Hourly_NO_for_UCC)[1] <- "Date"
X2020_Hourly_NO_for_UCC$Date <- as.Date(X2020_Hourly_NO_for_UCC$Date)
# Convert character numbers into double and replace NA values with mean
for(i in 2:ncol(X2020_Hourly_NO_for_UCC)){
X2020_Hourly_NO_for_UCC[,i] <- as.double(X2020_Hourly_NO_for_UCC[,i])
# X2020_Hourly_NO_for_UCC[is.na(X2020_Hourly_NO_for_UCC[,i]), i] <- mean(X2020_Hourly_NO_for_UCC[,i], na.rm = TRUE)
}
# X2020_Hourly_NO_for_UCC$Castlebar <- as.double(X2020_Hourly_NO_for_UCC$Castlebar)
# Check NA values
missing_data_NO_2020 <- data.frame("Station"=colnames(X2020_Hourly_NO_for_UCC[,-1]), "value"=colSums(is.na(X2020_Hourly_NO_for_UCC[,-1])))
md_NO_2020 <-ggplot(data=missing_data_NO_2020, aes(x=Station, y=value)) +
geom_bar(stat="identity", fill="steelblue")
md_NO_2020 +
# geom_text(aes(label=value), vjust=1.6, color="white", size=3.5)+
geom_text(aes(label=value), vjust=-0.3, size=3.5)+
theme_minimal() +
theme(axis.text.x=element_text(angle = 45, hjust = 1))+
ggtitle("Missing data of NO in 2020")
str(X2020_Hourly_NO_for_UCC)
# library(Hmisc)
# hist.data.frame(df)
########### 2018 PM2.5
str(X2018_Hourly_PM2_5_for_UCC)
typeof(X2018_Hourly_PM2_5_for_UCC)
# Convert data into data frame
X2018_Hourly_PM2_5_for_UCC <- data.frame(X2018_Hourly_PM2_5_for_UCC)
# Convert string date to Date object
colnames(X2018_Hourly_PM2_5_for_UCC)[1] <- "Date"
X2018_Hourly_PM2_5_for_UCC$Date <- as.Date(X2018_Hourly_PM2_5_for_UCC$Date)
# Convert character numbers into double and replace NA values with mean
for(i in 2:ncol(X2018_Hourly_PM2_5_for_UCC)){
X2018_Hourly_PM2_5_for_UCC[,i] <- as.double(X2018_Hourly_PM2_5_for_UCC[,i])
# X2018_Hourly_PM2_5_for_UCC[is.na(X2018_Hourly_PM2_5_for_UCC[,i]), i] <- mean(X2018_Hourly_PM2_5_for_UCC[,i], na.rm = TRUE)
}
# X2018_Hourly_PM2_5_for_UCC$Castlebar <- as.double(X2018_Hourly_PM2_5_for_UCC$Castlebar)
# Check NA values
missing_data_PM2_5_2018 <- data.frame("Station"=colnames(X2018_Hourly_PM2_5_for_UCC[,-1]), "value"=colSums(is.na(X2018_Hourly_PM2_5_for_UCC[,-1])))
md_PM2_5_2018<-ggplot(data=missing_data_PM2_5_2018, aes(x=Station, y=value)) +
geom_bar(stat="identity", fill="steelblue")
md_PM2_5_2018 +
# geom_text(aes(label=value), vjust=1.6, color="white", size=3.5)+
geom_text(aes(label=value), vjust=-0.3, size=3.5)+
theme_minimal() +
theme(axis.text.x=element_text(angle = 45, hjust = 1))+
ggtitle("Missing data of PM2.5 in 2018")
str(X2018_Hourly_PM2_5_for_UCC)
########### 2019 PM2.5
str(X2019_Hourly_PM2_5_for_UCC)
typeof(X2019_Hourly_PM2_5_for_UCC)
# Convert data into data frame
X2019_Hourly_PM2_5_for_UCC <- data.frame(X2019_Hourly_PM2_5_for_UCC)
# Convert string date to Date object
colnames(X2019_Hourly_PM2_5_for_UCC)[1] <- "Date"
X2019_Hourly_PM2_5_for_UCC$Date <- as.Date(X2019_Hourly_PM2_5_for_UCC$Date)
# Convert character numbers into double and replace NA values with mean
for(i in 2:ncol(X2019_Hourly_PM2_5_for_UCC)){
X2019_Hourly_PM2_5_for_UCC[,i] <- as.double(X2019_Hourly_PM2_5_for_UCC[,i])
# X2019_Hourly_PM2_5_for_UCC[is.na(X2019_Hourly_PM2_5_for_UCC[,i]), i] <- mean(X2019_Hourly_PM2_5_for_UCC[,i], na.rm = TRUE)
}
# X2019_Hourly_PM2_5_for_UCC$Castlebar <- as.double(X2019_Hourly_PM2_5_for_UCC$Castlebar)
# Check NA values
missing_data_PM2_5_2019 <- data.frame("Station"=colnames(X2019_Hourly_PM2_5_for_UCC[,-1]), "value"=colSums(is.na(X2019_Hourly_PM2_5_for_UCC[,-1])))
md_PM2_5_2019<-ggplot(data=missing_data_PM2_5_2019, aes(x=Station, y=value)) +
geom_bar(stat="identity", fill="steelblue")
md_PM2_5_2019 +
# geom_text(aes(label=value), vjust=1.6, color="white", size=3.5)+
geom_text(aes(label=value), vjust=-0.3, size=3.5)+
theme_minimal() +
theme(axis.text.x=element_text(angle = 45, hjust = 1))+
ggtitle("Missing data of PM2.5 in 2019")
str(X2019_Hourly_PM2_5_for_UCC)
########### 2020 PM2.5
str(X2020_Hourly_PM2_5_for_UCC)
typeof(X2020_Hourly_PM2_5_for_UCC)
# Convert data into data frame
X2020_Hourly_PM2_5_for_UCC <- data.frame(X2020_Hourly_PM2_5_for_UCC)
# Convert string date to Date object
colnames(X2020_Hourly_PM2_5_for_UCC)[1] <- "Date"
X2020_Hourly_PM2_5_for_UCC$Date <- as.Date(X2020_Hourly_PM2_5_for_UCC$Date)
# Convert character numbers into double and replace NA values with mean
for(i in 2:ncol(X2020_Hourly_PM2_5_for_UCC)){
X2020_Hourly_PM2_5_for_UCC[,i] <- as.double(X2020_Hourly_PM2_5_for_UCC[,i])
# X2020_Hourly_PM2_5_for_UCC[is.na(X2020_Hourly_PM2_5_for_UCC[,i]), i] <- mean(X2020_Hourly_PM2_5_for_UCC[,i], na.rm = TRUE)
}
# X2020_Hourly_PM2_5_for_UCC$Castlebar <- as.double(X2020_Hourly_PM2_5_for_UCC$Castlebar)
# Check NA values
missing_data_PM2_5_2020 <- data.frame("Station"=colnames(X2020_Hourly_PM2_5_for_UCC[,-1]), "value"=colSums(is.na(X2020_Hourly_PM2_5_for_UCC[,-1])))
md_PM2_5_2020<-ggplot(data=missing_data_PM2_5_2020, aes(x=Station, y=value)) +
geom_bar(stat="identity", fill="steelblue")
md_PM2_5_2020 +
# geom_text(aes(label=value), vjust=1.6, color="white", size=3.5)+
geom_text(aes(label=value), vjust=-0.3, size=3.5)+
theme_minimal() +
theme(axis.text.x=element_text(angle = 45, hjust = 1))+
ggtitle("Missing data of PM2.5 in 2020")
str(X2020_Hourly_PM2_5_for_UCC)
########### 2018 PM10
str(X2018_Hourly_PM10_for_UCC)
typeof(X2018_Hourly_PM10_for_UCC)
# Convert data into data frame
X2018_Hourly_PM10_for_UCC <- data.frame(X2018_Hourly_PM10_for_UCC)
# Convert string date to Date object
colnames(X2018_Hourly_PM10_for_UCC)[1] <- "Date"
X2018_Hourly_PM10_for_UCC$Date <- as.Date(X2018_Hourly_PM10_for_UCC$Date)
# Convert character numbers into double and replace NA values with mean
for(i in 2:ncol(X2018_Hourly_PM10_for_UCC)){
X2018_Hourly_PM10_for_UCC[,i] <- as.double(X2018_Hourly_PM10_for_UCC[,i])
# X2018_Hourly_PM10_for_UCC[is.na(X2018_Hourly_PM10_for_UCC[,i]), i] <- mean(X2018_Hourly_PM10_for_UCC[,i], na.rm = TRUE)
}
# X2018_Hourly_PM10_for_UCC$Castlebar <- as.double(X2018_Hourly_PM10_for_UCC$Castlebar)
# Check NA values
missing_data_PM10_2018 <- data.frame("Station"=colnames(X2018_Hourly_PM10_for_UCC[,-1]), "value"=colSums(is.na(X2018_Hourly_PM10_for_UCC[,-1])))
md_PM10_2018<-ggplot(data=missing_data_PM10_2018, aes(x=Station, y=value)) +
geom_bar(stat="identity", fill="steelblue")
md_PM10_2018 +
# geom_text(aes(label=value), vjust=1.6, color="white", size=3.5)+
geom_text(aes(label=value), vjust=-0.3, size=3.5)+
theme_minimal() +
theme(axis.text.x=element_text(angle = 45, hjust = 1))+
ggtitle("Missing data of PM10 in 2018")
str(X2018_Hourly_PM10_for_UCC)
########### 2019 PM10
str(X2019_Hourly_PM10_for_UCC)
typeof(X2019_Hourly_PM10_for_UCC)
# Convert data into data frame
X2019_Hourly_PM10_for_UCC <- data.frame(X2019_Hourly_PM10_for_UCC)
# Convert string date to Date object
colnames(X2019_Hourly_PM10_for_UCC)[1] <- "Date"
X2019_Hourly_PM10_for_UCC$Date <- as.Date(X2019_Hourly_PM10_for_UCC$Date)
# Convert character numbers into double and replace NA values with mean
for(i in 2:ncol(X2019_Hourly_PM10_for_UCC)){
X2019_Hourly_PM10_for_UCC[,i] <- as.double(X2019_Hourly_PM10_for_UCC[,i])
# X2019_Hourly_PM10_for_UCC[is.na(X2019_Hourly_PM10_for_UCC[,i]), i] <- mean(X2019_Hourly_PM10_for_UCC[,i], na.rm = TRUE)
}
# X2019_Hourly_PM10_for_UCC$Castlebar <- as.double(X2019_Hourly_PM10_for_UCC$Castlebar)
# Check NA values
missing_data_PM10_2019 <- data.frame("Station"=colnames(X2019_Hourly_PM10_for_UCC[,-1]), "value"=colSums(is.na(X2019_Hourly_PM10_for_UCC[,-1])))
md_PM10_2019<-ggplot(data=missing_data_PM10_2019, aes(x=Station, y=value)) +
geom_bar(stat="identity", fill="steelblue")
md_PM10_2019 +
# geom_text(aes(label=value), vjust=1.6, color="white", size=3.5)+
geom_text(aes(label=value), vjust=-0.3, size=3.5)+
theme_minimal() +
theme(axis.text.x=element_text(angle = 45, hjust = 1))+
ggtitle("Missing data of PM10 in 2019")
str(X2019_Hourly_PM10_for_UCC)
########### 2020 PM10
str(X2020_Hourly_PM10_for_UCC)
typeof(X2020_Hourly_PM10_for_UCC)
# Convert data into data frame
X2020_Hourly_PM10_for_UCC <- data.frame(X2020_Hourly_PM10_for_UCC)
# Convert string date to Date object
colnames(X2020_Hourly_PM10_for_UCC)[1] <- "Date"
X2020_Hourly_PM10_for_UCC$Date <- as.Date(X2020_Hourly_PM10_for_UCC$Date)
# Convert character numbers into double and replace NA values with mean
for(i in 2:ncol(X2020_Hourly_PM10_for_UCC)){
X2020_Hourly_PM10_for_UCC[,i] <- as.double(X2020_Hourly_PM10_for_UCC[,i])
# X2020_Hourly_PM10_for_UCC[is.na(X2020_Hourly_PM10_for_UCC[,i]), i] <- mean(X2020_Hourly_PM10_for_UCC[,i], na.rm = TRUE)
}
# X2020_Hourly_PM10_for_UCC$Castlebar <- as.double(X2020_Hourly_PM10_for_UCC$Castlebar)
# Check NA values
missing_data_PM10_2020 <- data.frame("Station"=colnames(X2020_Hourly_PM10_for_UCC[,-1]), "value"=colSums(is.na(X2020_Hourly_PM10_for_UCC[,-1])))
md_PM10_2020<-ggplot(data=missing_data_PM10_2020, aes(x=Station, y=value)) +
geom_bar(stat="identity", fill="steelblue")
md_PM10_2020 +
# geom_text(aes(label=value), vjust=1.6, color="white", size=3.5)+
geom_text(aes(label=value), vjust=-0.3, size=3.5)+
theme_minimal() +
theme(axis.text.x=element_text(angle = 45, hjust = 1))+
ggtitle("Missing data of PM10 in 2020")
str(X2020_Hourly_PM10_for_UCC)
View(X2018_Hourly_O3_for_UCC)
########### 2018 O3
str(X2018_Hourly_O3_for_UCC)
typeof(X2018_Hourly_O3_for_UCC)
# Convert data into data frame
X2018_Hourly_O3_for_UCC <- data.frame(X2018_Hourly_O3_for_UCC)
# Convert string date to Date object
colnames(X2018_Hourly_O3_for_UCC)[1] <- "Date"
X2018_Hourly_O3_for_UCC$Date <- as.Date(X2018_Hourly_O3_for_UCC$Date)
# Convert character numbers into double and replace NA values with mean
for(i in 2:ncol(X2018_Hourly_O3_for_UCC)){
X2018_Hourly_O3_for_UCC[,i] <- as.double(X2018_Hourly_O3_for_UCC[,i])
# X2018_Hourly_O3_for_UCC[is.na(X2018_Hourly_O3_for_UCC[,i]), i] <- mean(X2018_Hourly_O3_for_UCC[,i], na.rm = TRUE)
}
# X2018_Hourly_O3_for_UCC$Castlebar <- as.double(X2018_Hourly_O3_for_UCC$Castlebar)
# Check NA values
missing_data_O3_2018 <- data.frame("Station"=colnames(X2018_Hourly_O3_for_UCC[,-1]), "value"=colSums(is.na(X2018_Hourly_O3_for_UCC[,-1])))
md_O3_2018<-ggplot(data=missing_data_O3_2018, aes(x=Station, y=value)) +
geom_bar(stat="identity", fill="steelblue")
md_O3_2018 +
# geom_text(aes(label=value), vjust=1.6, color="white", size=3.5)+
geom_text(aes(label=value), vjust=-0.3, size=3.5)+
theme_minimal() +
theme(axis.text.x=element_text(angle = 45, hjust = 1))+
ggtitle("Missing data of O3 in 2018")
str(X2018_Hourly_O3_for_UCC)
########### 2019 O3
str(X2019_Hourly_O3_for_UCC)
typeof(X2019_Hourly_O3_for_UCC)
# Convert data into data frame
X2019_Hourly_O3_for_UCC <- data.frame(X2019_Hourly_O3_for_UCC)
# Convert string date to Date object
colnames(X2019_Hourly_O3_for_UCC)[1] <- "Date"
X2019_Hourly_O3_for_UCC$Date <- as.Date(X2019_Hourly_O3_for_UCC$Date)
# Convert character numbers into double and replace NA values with mean
for(i in 2:ncol(X2019_Hourly_O3_for_UCC)){
X2019_Hourly_O3_for_UCC[,i] <- as.double(X2019_Hourly_O3_for_UCC[,i])
# X2019_Hourly_O3_for_UCC[is.na(X2019_Hourly_O3_for_UCC[,i]), i] <- mean(X2019_Hourly_O3_for_UCC[,i], na.rm = TRUE)
}
# X2019_Hourly_O3_for_UCC$Castlebar <- as.double(X2019_Hourly_O3_for_UCC$Castlebar)
# Check NA values
missing_data_O3_2019 <- data.frame("Station"=colnames(X2019_Hourly_O3_for_UCC[,-1]), "value"=colSums(is.na(X2019_Hourly_O3_for_UCC[,-1])))
md_O3_2019<-ggplot(data=missing_data_O3_2019, aes(x=Station, y=value)) +
geom_bar(stat="identity", fill="steelblue")
md_O3_2019 +
# geom_text(aes(label=value), vjust=1.6, color="white", size=3.5)+
geom_text(aes(label=value), vjust=-0.3, size=3.5)+
theme_minimal() +
theme(axis.text.x=element_text(angle = 45, hjust = 1))+
ggtitle("Missing data of O3 in 2019")
str(X2019_Hourly_O3_for_UCC)
########### 2020 O3
str(X2020_Hourly_O3_for_UCC)
typeof(X2020_Hourly_O3_for_UCC)
# Convert data into data frame
X2020_Hourly_O3_for_UCC <- data.frame(X2020_Hourly_O3_for_UCC)
# Convert string date to Date object
colnames(X2020_Hourly_O3_for_UCC)[1] <- "Date"
X2020_Hourly_O3_for_UCC$Date <- as.Date(X2020_Hourly_O3_for_UCC$Date)
# Convert character numbers into double and replace NA values with mean
for(i in 2:ncol(X2020_Hourly_O3_for_UCC)){
X2020_Hourly_O3_for_UCC[,i] <- as.double(X2020_Hourly_O3_for_UCC[,i])
# X2020_Hourly_O3_for_UCC[is.na(X2020_Hourly_O3_for_UCC[,i]), i] <- mean(X2020_Hourly_O3_for_UCC[,i], na.rm = TRUE)
}
# X2020_Hourly_O3_for_UCC$Castlebar <- as.double(X2020_Hourly_O3_for_UCC$Castlebar)
# Check NA values
missing_data_O3_2020 <- data.frame("Station"=colnames(X2020_Hourly_O3_for_UCC[,-1]), "value"=colSums(is.na(X2020_Hourly_O3_for_UCC[,-1])))
md_O3_2020<-ggplot(data=missing_data_O3_2020, aes(x=Station, y=value)) +
geom_bar(stat="identity", fill="steelblue")
md_O3_2020 +
# geom_text(aes(label=value), vjust=1.6, color="white", size=3.5)+
geom_text(aes(label=value), vjust=-0.3, size=3.5)+
theme_minimal() +
theme(axis.text.x=element_text(angle = 45, hjust = 1))+
ggtitle("Missing data of O3 in 2020")
str(X2020_Hourly_O3_for_UCC)
########### 2018 NO2
str(X2018_Hourly_NO2_for_UCC)
typeof(X2018_Hourly_NO2_for_UCC)
# Convert data into data frame
X2018_Hourly_NO2_for_UCC <- data.frame(X2018_Hourly_NO2_for_UCC)
# Convert string date to Date object
colnames(X2018_Hourly_NO2_for_UCC)[1] <- "Date"
X2018_Hourly_NO2_for_UCC$Date <- as.Date(X2018_Hourly_NO2_for_UCC$Date)
# Convert character numbers into double and replace NA values with mean
for(i in 2:ncol(X2018_Hourly_NO2_for_UCC)){
X2018_Hourly_NO2_for_UCC[,i] <- as.double(X2018_Hourly_NO2_for_UCC[,i])
# X2018_Hourly_NO2_for_UCC[is.na(X2018_Hourly_NO2_for_UCC[,i]), i] <- mean(X2018_Hourly_NO2_for_UCC[,i], na.rm = TRUE)
}
# X2018_Hourly_NO2_for_UCC$Castlebar <- as.double(X2018_Hourly_NO2_for_UCC$Castlebar)
# Check NA values
missing_data_NO2_2018 <- data.frame("Station"=colnames(X2018_Hourly_NO2_for_UCC[,-1]), "value"=colSums(is.na(X2018_Hourly_NO2_for_UCC[,-1])))
md_NO2_2018<-ggplot(data=missing_data_NO2_2018, aes(x=Station, y=value)) +
geom_bar(stat="identity", fill="steelblue")
md_NO2_2018 +
# geom_text(aes(label=value), vjust=1.6, color="white", size=3.5)+
geom_text(aes(label=value), vjust=-0.3, size=3.5)+
theme_minimal() +
theme(axis.text.x=element_text(angle = 45, hjust = 1))+
ggtitle("Missing data of NO2 in 2018")
str(X2018_Hourly_NO2_for_UCC)
########### 2019 NO2
str(X2019_Hourly_NO2_for_UCC)
typeof(X2019_Hourly_NO2_for_UCC)
# Convert data into data frame
X2019_Hourly_NO2_for_UCC <- data.frame(X2019_Hourly_NO2_for_UCC)
# Convert string date to Date object
colnames(X2019_Hourly_NO2_for_UCC)[1] <- "Date"
X2019_Hourly_NO2_for_UCC$Date <- as.Date(X2019_Hourly_NO2_for_UCC$Date)
# Convert character numbers into double and replace NA values with mean
for(i in 2:ncol(X2019_Hourly_NO2_for_UCC)){
X2019_Hourly_NO2_for_UCC[,i] <- as.double(X2019_Hourly_NO2_for_UCC[,i])
# X2019_Hourly_NO2_for_UCC[is.na(X2019_Hourly_NO2_for_UCC[,i]), i] <- mean(X2019_Hourly_NO2_for_UCC[,i], na.rm = TRUE)
}
# X2019_Hourly_NO2_for_UCC$Castlebar <- as.double(X2019_Hourly_NO2_for_UCC$Castlebar)
# Check NA values
missing_data_NO2_2019 <- data.frame("Station"=colnames(X2019_Hourly_NO2_for_UCC[,-1]), "value"=colSums(is.na(X2019_Hourly_NO2_for_UCC[,-1])))
md_NO2_2019<-ggplot(data=missing_data_NO2_2019, aes(x=Station, y=value)) +
geom_bar(stat="identity", fill="steelblue")
md_NO2_2019 +
# geom_text(aes(label=value), vjust=1.6, color="white", size=3.5)+
geom_text(aes(label=value), vjust=-0.3, size=3.5)+
theme_minimal() +
theme(axis.text.x=element_text(angle = 45, hjust = 1))+
ggtitle("Missing data of NO2 in 2019")
str(X2019_Hourly_NO2_for_UCC)
########### 2020 NO2
str(X2020_Hourly_NO2_for_UCC)
typeof(X2020_Hourly_NO2_for_UCC)
# Convert data into data frame
X2020_Hourly_NO2_for_UCC <- data.frame(X2020_Hourly_NO2_for_UCC)
# Convert string date to Date object
colnames(X2020_Hourly_NO2_for_UCC)[1] <- "Date"
X2020_Hourly_NO2_for_UCC$Date <- as.Date(X2020_Hourly_NO2_for_UCC$Date)
# Convert character numbers into double and replace NA values with mean
for(i in 2:ncol(X2020_Hourly_NO2_for_UCC)){
X2020_Hourly_NO2_for_UCC[,i] <- as.double(X2020_Hourly_NO2_for_UCC[,i])
# X2020_Hourly_NO2_for_UCC[is.na(X2020_Hourly_NO2_for_UCC[,i]), i] <- mean(X2020_Hourly_NO2_for_UCC[,i], na.rm = TRUE)
}
# X2020_Hourly_NO2_for_UCC$Castlebar <- as.double(X2020_Hourly_NO2_for_UCC$Castlebar)
# Check NA values
missing_data_NO2_2020 <- data.frame("Station"=colnames(X2020_Hourly_NO2_for_UCC[,-1]), "value"=colSums(is.na(X2020_Hourly_NO2_for_UCC[,-1])))
md_NO2_2020<-ggplot(data=missing_data_NO2_2020, aes(x=Station, y=value)) +
geom_bar(stat="identity", fill="steelblue")
md_NO2_2020 +
# geom_text(aes(label=value), vjust=1.6, color="white", size=3.5)+
geom_text(aes(label=value), vjust=-0.3, size=3.5)+
theme_minimal() +
theme(axis.text.x=element_text(angle = 45, hjust = 1))+
ggtitle("Missing data of NO2 in 2020")
str(X2020_Hourly_NO2_for_UCC)
str(X2020_Hourly_NO_for_UCC)
hist.data.frame(X2020_Hourly_NO_for_UCC[,-1])
hist.data.frame(X2020_Hourly_NO_for_UCC[,-1])
hist.data.frame(X2020_Hourly_NO_for_UCC[,-1])
hist.data.frame(X2020_Hourly_NO_for_UCC[,-1])
dev.new()
hist.data.frame(X2020_Hourly_NO_for_UCC[,-1])
hist.data.frame(X2020_Hourly_NO_for_UCC[,-1])
dev.new()
hist.data.frame(X2020_Hourly_NO_for_UCC[,-1])
dev.new()
hist.data.frame(X2020_Hourly_NO_for_UCC[,2:10])
View(X2020_Hourly_NO_for_UCC)
hist.data.frame(X2019_Hourly_NO_for_UCC[,2:10])
?Hmisc
??Hmisc
library(tidyr)
X2019_Hourly_NO_for_UCC %>% gather() %>% head()
View(X2019_Hourly_NO_for_UCC)
ggplot(gather(X2019_Hourly_NO_for_UCC[,-1]), aes(value)) +
geom_histogram(bins = 10) +
facet_wrap(~key, scales = 'free_x')
X2018_Hourly_NO_for_UCC %>% gather() %>% head()
ggplot(gather(X2018_Hourly_NO_for_UCC[,-1]), aes(value)) +
geom_histogram(bins = 10) +
facet_wrap(~key, scales = 'free_x')
hist.data.frame(X2019_Hourly_NO_for_UCC[,2:10])
dev.new()
hist.data.frame(X2019_Hourly_NO_for_UCC[,2:10])
hist.data.frame(X2019_Hourly_NO_for_UCC[,-1])
dev.new()
hist.data.frame(X2019_Hourly_NO_for_UCC[,-1])
